用r''表示''内部的字符串默认不转义
用'''...'''的格式表示多行内容

逻辑运算 not and or

空值None

/  浮点除
// 整除

ord()函数获取字符的整数表示，chr()函数把编码转换为对应的字符

len()函数计算的是str的字符数，如果换成bytes，len()函数就计算字节数

用len()函数可以获得list元素的个数
下标是负数表示从后获取,-1表示最后一个元素
末尾添加用append
insert插入到指定位置
pop()删除末尾,pop(i)删除下标i
list中数据类型可以不一样
list可嵌套(二维数组)

tuple   不可变的list(指向不变,所以里面的list还是可变的)
(1)表示小括号运算,返回1,要与tuple区分,=>(1,)

elif 替代了 else if

for item in list  去除list中的元素
不能n++ => n+=1

set需要提供一个list作为输入

内置函数:abs()  min()  max()  int()  hex()  

定义一个函数要使用def语句
如果没有return语句，函数执行完毕后也会返回结果，只是结果为None。return None可以简写为return。

from fileName import functionName

isinstance:like instanceof  
isinstance(var,type):
isinstance(x,int)
isinstance(x,(int,float))

raise TypeError('wrong type'):抛出异常

函数可返回多个值,事实是一个值(tuple),可这样赋值:(a,b,c) = (1,2,3)

默认参数也是一个变量★
默认参数必须指向不变对象

可变参数:参数名前加'*',传入list等,在list前加'*'
可变参数允许你传入0个或任意个参数，这些可变参数在函数调用时自动组装为一个tuple。而关键字参数允许你传入0个或任意个含参数名的参数，这些关键字参数在函数内部自动组装为一个dict

关键字参数传入dict等,前面加'**'
只接受指定名称的关键字:(a,b,*,c,d):
a,b必传,c,d为键,传的关键字键必须是c,d,'*'分隔
如果函数定义中已经有了一个可变参数，后面跟着的命名关键字参数就不再需要一个特殊分隔符*了
关键字参数可缺省,缺省可不传
参数定义的顺序必须是：必选参数、默认参数、可变参数、命名关键字参数和关键字参数

L[0:3] == L[:3]从0到3索引:   范围:[0,3)
从后取:最后一个为-1
tuple切片:(0,1,2,3,4)[:3]
字符串切片:'sdfdfgadf'[:3]

for key in D
for val in D.values()
for key,val in D.items()

isinstance(aaa,Iterable)    判断是否可迭代(需导入)
enumerate(L)    index,value

生成器generator:保存算法

a, b = b, a + b
等价于
t = (b, a + b) # t是一个tuple
a = t[0]
b = t[1]

如果一个函数定义中包含yield关键字，那么这个函数就不再是一个普通函数，而是一个generator
函数是顺序执行，遇到return语句或者最后一行函数语句就返回。而变成generator的函数，在每次调用next()的时候执行，遇到yield语句返回，再次执行时从上次返回的yield语句处继续执行

可以直接作用于for循环的对象统称为可迭代对象：Iterable
可以被next()函数调用并不断返回下一个值的对象称为迭代器：

Iterable变成Iterator可以使用iter()函数
Iterator对象表示的是一个数据流

函数名也是变量

map()函数接收两个参数，一个是函数，一个是Iterable，map将传入的函数依次作用到序列的每个元素，并把结果作为新的Iterator返回
reduce(f, [x1, x2, x3, x4]) = f(f(f(x1, x2), x3), x4)

filter()函数返回的是一个Iterator

返回闭包时牢记一点：返回函数不要引用任何循环变量，或者后续会发生变化的变量。★

@functools.wraps(func)保留返回值的__name__属性

当前时间戳:datetime.datetime.now().timestamp()

偏函数:可选参数传入一个固定参数,返回一个新的函数

每一个包目录下面都会有一个__init__.py的文件
__init__.py可以是空文件，也可以有Python代码

任何模块代码的第一个字符串都被视为模块的文档注释

sys模块有一个argv变量，用list存储了命令行的所有参数。argv至少有一个元素，因为第一个参数永远是该.py文件的名称

通过'_'前缀来实现private